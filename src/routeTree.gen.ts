/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as ReportsIndexImport } from './routes/reports/index'
import { Route as DrillingIndexImport } from './routes/drilling/index'
import { Route as ReportsWeeklyImport } from './routes/reports/weekly'
import { Route as ReportsDailyImport } from './routes/reports/daily'
import { Route as DrillingReportsImport } from './routes/drilling/reports'
import { Route as DrillingFormsImport } from './routes/drilling/forms'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsIndexRoute = ReportsIndexImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any)

const DrillingIndexRoute = DrillingIndexImport.update({
  id: '/drilling/',
  path: '/drilling/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsWeeklyRoute = ReportsWeeklyImport.update({
  id: '/reports/weekly',
  path: '/reports/weekly',
  getParentRoute: () => rootRoute,
} as any)

const ReportsDailyRoute = ReportsDailyImport.update({
  id: '/reports/daily',
  path: '/reports/daily',
  getParentRoute: () => rootRoute,
} as any)

const DrillingReportsRoute = DrillingReportsImport.update({
  id: '/drilling/reports',
  path: '/drilling/reports',
  getParentRoute: () => rootRoute,
} as any)

const DrillingFormsRoute = DrillingFormsImport.update({
  id: '/drilling/forms',
  path: '/drilling/forms',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/drilling/forms': {
      id: '/drilling/forms'
      path: '/drilling/forms'
      fullPath: '/drilling/forms'
      preLoaderRoute: typeof DrillingFormsImport
      parentRoute: typeof rootRoute
    }
    '/drilling/reports': {
      id: '/drilling/reports'
      path: '/drilling/reports'
      fullPath: '/drilling/reports'
      preLoaderRoute: typeof DrillingReportsImport
      parentRoute: typeof rootRoute
    }
    '/reports/daily': {
      id: '/reports/daily'
      path: '/reports/daily'
      fullPath: '/reports/daily'
      preLoaderRoute: typeof ReportsDailyImport
      parentRoute: typeof rootRoute
    }
    '/reports/weekly': {
      id: '/reports/weekly'
      path: '/reports/weekly'
      fullPath: '/reports/weekly'
      preLoaderRoute: typeof ReportsWeeklyImport
      parentRoute: typeof rootRoute
    }
    '/drilling/': {
      id: '/drilling/'
      path: '/drilling'
      fullPath: '/drilling'
      preLoaderRoute: typeof DrillingIndexImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/drilling/forms': typeof DrillingFormsRoute
  '/drilling/reports': typeof DrillingReportsRoute
  '/reports/daily': typeof ReportsDailyRoute
  '/reports/weekly': typeof ReportsWeeklyRoute
  '/drilling': typeof DrillingIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/drilling/forms': typeof DrillingFormsRoute
  '/drilling/reports': typeof DrillingReportsRoute
  '/reports/daily': typeof ReportsDailyRoute
  '/reports/weekly': typeof ReportsWeeklyRoute
  '/drilling': typeof DrillingIndexRoute
  '/reports': typeof ReportsIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/drilling/forms': typeof DrillingFormsRoute
  '/drilling/reports': typeof DrillingReportsRoute
  '/reports/daily': typeof ReportsDailyRoute
  '/reports/weekly': typeof ReportsWeeklyRoute
  '/drilling/': typeof DrillingIndexRoute
  '/reports/': typeof ReportsIndexRoute
  '/settings/': typeof SettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/drilling/forms'
    | '/drilling/reports'
    | '/reports/daily'
    | '/reports/weekly'
    | '/drilling'
    | '/reports'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/drilling/forms'
    | '/drilling/reports'
    | '/reports/daily'
    | '/reports/weekly'
    | '/drilling'
    | '/reports'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/drilling/forms'
    | '/drilling/reports'
    | '/reports/daily'
    | '/reports/weekly'
    | '/drilling/'
    | '/reports/'
    | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DrillingFormsRoute: typeof DrillingFormsRoute
  DrillingReportsRoute: typeof DrillingReportsRoute
  ReportsDailyRoute: typeof ReportsDailyRoute
  ReportsWeeklyRoute: typeof ReportsWeeklyRoute
  DrillingIndexRoute: typeof DrillingIndexRoute
  ReportsIndexRoute: typeof ReportsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DrillingFormsRoute: DrillingFormsRoute,
  DrillingReportsRoute: DrillingReportsRoute,
  ReportsDailyRoute: ReportsDailyRoute,
  ReportsWeeklyRoute: ReportsWeeklyRoute,
  DrillingIndexRoute: DrillingIndexRoute,
  ReportsIndexRoute: ReportsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/drilling/forms",
        "/drilling/reports",
        "/reports/daily",
        "/reports/weekly",
        "/drilling/",
        "/reports/",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/drilling/forms": {
      "filePath": "drilling/forms.tsx"
    },
    "/drilling/reports": {
      "filePath": "drilling/reports.tsx"
    },
    "/reports/daily": {
      "filePath": "reports/daily.tsx"
    },
    "/reports/weekly": {
      "filePath": "reports/weekly.tsx"
    },
    "/drilling/": {
      "filePath": "drilling/index.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
